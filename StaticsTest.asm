// SP=256
@256
D=A
@SP
M=D
// call Sys.init
@RETADDR0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
A=M
D=M-D
@ARG
A=M
M=D
@SP
A=M
D=M
@LCL
A=M
M=D
@SYS.SYS.INIT
0;JMP
(RETADDR0)
// function Class1.set 0
(CLASS1.CLASS1.SET)
// push argument 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
AM=M-1
D=M
@Class1.0
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
AM=M-1
D=M
@Class1.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// function Class1.get 0
(CLASS1.CLASS1.GET)
// push static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// function Class2.set 0
(CLASS2.CLASS2.SET)
// push argument 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
AM=M-1
D=M
@Class2.0
M=D
// push argument 1
@1
D=A
@ARG
A=M
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
AM=M-1
D=M
@Class2.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// function Class2.get 0
(CLASS2.CLASS2.GET)
// push static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return
@LCL
D=M
@endFrame
M=D
@5
A=D-A
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@endFrame
D=M-1
AM=D
D=M
@THAT
M=D
@endFrame
D=M-1
AM=D
D=M
@THIS
M=D
@endFrame
D=M-1
AM=D
D=M
@ARG
M=D
@endFrame
D=M-1
AM=D
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// function Sys.init 0
(SYS.SYS.INIT)
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2
@RETADDR1
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
A=M
D=M-D
@ARG
A=M
M=D
@SP
A=M
D=M
@LCL
A=M
M=D
@SYS.CLASS1.SET
0;JMP
(RETADDR1)
// pop temp 0
@5
D=A
@0
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2
@RETADDR2
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
A=M
D=M-D
@ARG
A=M
M=D
@SP
A=M
D=M
@LCL
A=M
M=D
@SYS.CLASS2.SET
0;JMP
(RETADDR2)
// pop temp 0
@5
D=A
@0
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
// call Class1.get 0
@RETADDR3
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
A=M
D=M-D
@ARG
A=M
M=D
@SP
A=M
D=M
@LCL
A=M
M=D
@SYS.CLASS1.GET
0;JMP
(RETADDR3)
// call Class2.get 0
@RETADDR4
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
A=M
D=M-D
@ARG
A=M
M=D
@SP
A=M
D=M
@LCL
A=M
M=D
@SYS.CLASS2.GET
0;JMP
(RETADDR4)
// label WHILE
(SYS.WHILE)
// goto WHILE
@SYS.WHILE
0;JMP
